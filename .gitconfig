[core]
	editor = subl
#	editor = nano
	ignorecase = false
	filemode = false
	autocrlf = false
	preloadindex = true
	fscache = true
	excludesfile = $DOCUMENTS\\gitignore_global.txt
[gc]
	auto = 256
[user]
	name = Jonas Morwing
	email = $EMAIL
[diff]
	tool = myDiffAsTool
 	#Specified perl version in case embedded git otherwise takes from "Atlassian/git mingw perl"
	external = "C:/cygwin64/bin/perl C:/Cygwin64/bin/myDiff"
[merge]
	tool = beyond
[difftool "myDiffAsTool"]
 	#Specified perl version in case embedded git otherwise takes from "Atlassian/git mingw perl"
	cmd = "C:/cygwin64/bin/perl C:/Cygwin64/bin/myDiff" -tool $LOCAL $REMOTE $BASE
[difftool "kdiff3"]
	cmd = kdiff3 \"$(cygpath -wla $LOCAL)\" \"$(cygpath -wla $REMOTE)\"
[difftool "ccDiff"]
	cmd = cleardiffmrg \"$(cygpath -wla $LOCAL)\" \"$(cygpath -wla $REMOTE)\"
[difftool "beyond"]	
	cmd = 'C:/Program Files (x86)/Beyond Compare 4/BComp.exe' \"$(cygpath -wla $LOCAL)\" \"$(cygpath -wla $REMOTE)\"
[mergetool "kdiff3"]
	cmd = 'C:/Program Files/KDiff3/kdiff3.exe' \"$BASE\" \"$LOCAL\" \"$REMOTE\" -o \"$MERGED\"
	trustExitCode = true
[mergetool "beyond"]
	cmd = 'C:/Program Files (x86)/Beyond Compare 4/BComp.exe' \"$LOCAL\" \"$REMOTE\" \"$BASE\" \"$MERGED\"
[difftool "sourcetree"]
	cmd = 'C:/Program Files/KDiff3/kdiff3.exe' \"$LOCAL\" \"$REMOTE\"
[mergetool "sourcetree"]
	cmd = 'C:/Program Files (x86)/Beyond Compare 4/BComp.exe' \"$LOCAL\" \"$REMOTE\" \"$BASE\" \"$MERGED\"
	trustExitCode = true
[help]
	autocorrect = 40
[alias]
	unstage = reset HEAD --
	last = log -1 HEAD
	#diff-analysis = "!f() { git difftool -y --extcmd 'generic/Perl/Test/gitResultDiffsPlugin.pl -I asllib/test' -O asllib/test/.diffAnalysisOrder $@; }; f"
	diff-analysis = difftool -y --extcmd 'generic/Perl/Test/gitResultDiffsPlugin.pl -I asllib/test' -O asllib/test/.diffAnalysisOrder	
	find-empty-diffing = "!f() { git diff --name-only $@ | xargs -I file -n1 find file -type f -empty; }; f"
	recheckout-empty-diffing = "!f() { git find-empty-diffing --relative $@ | xargs -t -I files git checkout -- files; }; f"
	findalias = config --global --get-regexp alias	
	#findalias = "!grepalias() { git config --global --get-regexp alias | grep -i \"$1\" | awk -v nr=2 '{sub(/^alias\\./,\"\")};{printf \"\\033[31m%_10s\\033[1;37m\", $1};{sep=FS};{for (x=nr; x<=NF; x++) {printf \"%s%s\", sep, $x; }; print \"\\033[0;39m\"}'; }; grepalias"	
	log-lr = log --left-right --graph --cherry-pick --oneline
	log-branch = log --first-parent -m
	st = status
	di = "!f() { cd ${GIT_PREFIX:-.}; if [ `git diff --name-only $@ | wc -l` -gt 1 ]; then git diff --name-status $@; else git diff $@; fi }; f"
	getroot = rev-parse --show-toplevel
#	file-size requires argument to be "<rev>:<git-absoulte-path>"
	file-size = "!f() { git show $@ | wc -c; }; f"
#	"!f() { git difftool -y --extcmd 'generic/Perl/Test/gitResultDiffsPlugin.pl -I asllib/test' -O asllib/test/.diffAnalysisOrder $@; }; f"

# Aliases to retrieve corresponding ct versions
#	ctver = "!f() { git log --first-parent --max-count=2 --pretty=format:%H $1 | xargs -L 1 git log --first-parent $2 --max-count=1 --pretty=format:%h --grep; }; f"
#	ctver-oneline = "!f() { git log --first-parent --max-count=2 --pretty=format:%H $1 | xargs -L 1 git log --first-parent $2 --max-count=1 --pretty=oneline --grep; }; f"
	resultver = "!f() { git log --first-parent --pretty=oneline $2 --grep `git log -1 --format=%H $1`; }; f"
[push]
	default = simple
[color]
	ui = true
[grep]
	lineNumber = true